C51 COMPILER V9.00   MAIN                                                                  10/01/2018 10:19:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: F:\KEIL5\C51\BIN\C51.EXE ..\code\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code) DEBUG OBJECT
                    -EXTEND PRINT(.\main.lst) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **      CPU: STC11L08XE
   4          **      晶振：22.1184MHZ
   5          **      波特率：9600 bit/S
   6          **      配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式+IO控制： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          #include<math.h> 
  15          //#include "stdio.h"
  16          
  17          
  18          sbit en1=P3^4; /* L298的Enable A */ 
  19          
  20          /************************************************************************************/
  21          //      nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  22          //      LD_ASR_NONE:            表示没有在作ASR识别
  23          //      LD_ASR_RUNING：         表示LD3320正在作ASR识别中
  24          //      LD_ASR_FOUNDOK:         表示一次识别流程结束后，有一个识别结果
  25          //      LD_ASR_FOUNDZERO:       表示一次识别流程结束后，没有识别结果
  26          //      LD_ASR_ERROR:           表示一次识别流程中LD3320芯片内部出现不正确的状态
  27          /***********************************************************************************/
  28          uint8 idata nAsrStatus=0;       
  29          void MCU_init(); 
  30          void ProcessInt0(); //识别处理函数
  31          void User_handle(uint8 dat);//用户执行操作函数
  32          void Led_test(void);//单片机工作指示
  33          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  34          
  35          
  36          
  37          
  38          extern uchar Fanflag;//风扇标志位
  39          
  40          uchar t=0; /* 中断计数器 */ 
  41          uchar m1=0; /* 电机1速度值 */ 
  42          uchar tmp1; /* 电机当前速度值 */ 
  43          
  44          
  45          
  46          /***********************************************************
  47          * 名    称： void  main(void)
  48          * 功    能： 主函数     程序入口
  49          * 入口参数：  
  50          * 出口参数：
  51          * 说    明：                                     
  52          * 调用方法： 
  53          **********************************************************/ 
  54          int  main(void)         
C51 COMPILER V9.00   MAIN                                                                  10/01/2018 10:19:00 PAGE 2   

  55          {
  56   1              uint8 idata nAsrRes;
  57   1              en1=0;
  58   1              
  59   1              Led_test();     
  60   1              MCU_init();
  61   1              LD_Reset();
  62   1              UartIni(); /*串口初始化*/
  63   1                      
  64   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR 
  65   1              //set_time();
  66   1              lcd_init();//初始化LCD12864
  67   1              SYN_FrameInfo(0,"系统启动中");
  68   1              display_12864(1,1,"智能语音风扇");
  69   1              display_12864(2,1,"西北民族大学");
  70   1              display_12864(3,1,"王昭武邓天金");
  71   1              display_12864(4,2,"Welcome!");
  72   1              
  73   1              Delay200ms();
  74   1              Delay200ms();
  75   1              Delay200ms();
  76   1              Delay200ms();
  77   1              Delay200ms();
  78   1              Delay200ms();
  79   1              Delay200ms();
  80   1              Delay200ms();
  81   1              lcd_init();//初始化LCD12864
  82   1              ClearScreen();lcd_wcmd(0x01);//清屏
  83   1              SYN_FrameInfo(0,"初始化完成");  
  84   1              Delay200ms();
  85   1              while(1)  
  86   1              { 
  87   2                      
  88   2                      read_time();
  89   2                      DisplayTime();//显示时间及温度
  90   2                      
  91   2                      switch(nAsrStatus)
  92   2                      {
  93   3                              case LD_ASR_RUNING:
  94   3                              case LD_ASR_ERROR:
  95   3                              break;
  96   3                              case LD_ASR_NONE:
  97   3                              {
  98   4                                      nAsrStatus=LD_ASR_RUNING;
  99   4                                      if (RunASR()==0)        /*      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
 100   4                                      {
 101   5                                              nAsrStatus = LD_ASR_ERROR;
 102   5                                      
 103   5                                      }
 104   4                                      break;
 105   4                              }  
 106   3                              case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
 107   3                              {                               
 108   4                                      nAsrRes = LD_GetResult();               /*获取结果*/
 109   4                                      User_handle(nAsrRes);//用户执行函数 
 110   4                                      nAsrStatus = LD_ASR_NONE;
 111   4                                      
 112   4                                      break;
 113   4                              }
 114   3                              case LD_ASR_FOUNDZERO:
 115   3                              default:
 116   3                              {
C51 COMPILER V9.00   MAIN                                                                  10/01/2018 10:19:00 PAGE 3   

 117   4                                      nAsrStatus = LD_ASR_NONE;
 118   4                                      
 119   4                                      break;
 120   4                              }
 121   3                      }       // switch                               
 122   2              }// while  */
 123   1      
 124   1        }
 125          /***********************************************************
 126          * 名    称：     LED灯测试
 127          * 功    能： 单片机是否工作指示
 128          * 入口参数： 无 
 129          * 出口参数：无
 130          * 说    明：                                     
 131          **********************************************************/
 132          void Led_test(void)
 133          {
 134   1              LED=~ LED;
 135   1              Delay200ms();
 136   1              LED=~ LED;
 137   1              Delay200ms();
 138   1              LED=~ LED;
 139   1              Delay200ms();
 140   1              LED=~ LED;
 141   1              Delay200ms();
 142   1              LED=~ LED;
 143   1              Delay200ms();
 144   1              LED=~ LED;
 145   1      }
 146          /***********************************************************
 147          * 名    称： void MCU_init()
 148          * 功    能： 单片机初始化
 149          * 入口参数：  
 150          * 出口参数：
 151          * 说    明：                                     
 152          * 调用方法： 
 153          **********************************************************/ 
 154          void MCU_init()
 155          {
 156   1              P0 = 0xff;
 157   1              P1 = 0xff;
 158   1              P2 = 0xff;
 159   1              P3 = 0xff;
 160   1              P4 = 0xff;
 161   1      
 162   1      //      P1M0=0xff;      //P1端口设置为推挽输出功能，即提高IO口驱动能力，从驱动继电器模块工作
 163   1      //      P1M1=0x00;
 164   1              
 165   1              TMOD=0x02; /* 设定T0的工作模式为2 ,8位自动重置定时器，每过几个机器周期，计数器加一*/ 
 166   1              TH0=0x9B; /* 装入定时器的初值，计数100次溢出 */ 
 167   1              TL0=0x9B; /*装入时间常数*/
 168   1              TR0=0;
 169   1              ET0=1;
 170   1              en1=0;
 171   1              
 172   1      
 173   1              LD_MODE = 0;            //      设置MD管脚为低，并行模式读写
 174   1              IE0=1;
 175   1              EX0=1;
 176   1              EA=1;
 177   1      }
 178          
C51 COMPILER V9.00   MAIN                                                                  10/01/2018 10:19:00 PAGE 4   

 179          
 180          void timer0() interrupt 1 /* T0中断服务程序 */  
 181          { 
 182   1              if(t==0) /* 1个PWM周期完成后才会接受新数值 */ 
 183   1              { 
 184   2                      tmp1=m1; 
 185   2              } 
 186   1              if(t<tmp1) en1=1; else en1=0; /* 产生电机1的PWM信号 */ 
 187   1              t++; 
 188   1              if(t>=100) t=0; /* 1个PWM信号由100次中断产生 */ 
 189   1      }
 190          
 191          /***********************************************************
 192          * 名    称：    延时函数
 193          * 功    能：
 194          * 入口参数：  
 195          * 出口参数：
 196          * 说    明：                                     
 197          * 调用方法： 
 198          **********************************************************/ 
 199          
 200          
 201          /***********************************************************
 202          * 名    称： 中断处理函数
 203          * 功    能：
 204          * 入口参数：  
 205          * 出口参数：
 206          * 说    明：                                     
 207          * 调用方法： 
 208          **********************************************************/ 
 209          void ExtInt0Handler(void) interrupt 0  
 210          {       
 211   1              ProcessInt0();                          /*      LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理*/
 212   1              read_time();
 213   1      }
 214          /***********************************************************
 215          * 名    称：用户执行函数 
 216          * 功    能：识别成功后，执行动作可在此进行修改 
 217          * 入口参数： 无 
 218          * 出口参数：无
 219          * 说    明： 通过控制PAx端口的高低电平，从而控制外部继电器的通断                                         
 220          **********************************************************/
 221          void    User_handle(uint8 dat)
 222          {
 223   1      
 224   1                       if(0==dat)
 225   1                       {
 226   2                        SYN_FrameInfo(0,"风扇已打开");
 227   2                        Delay200ms();
 228   2                        G0_flag=ENABLE;
 229   2                        LED=0;
 230   2                        Fanflag=1;
 231   2                       }
 232   1                       else if(ENABLE==G0_flag)
 233   1                       {      
 234   2                              //      G0_flag=DISABLE;
 235   2                              LED=1;
 236   2                               switch(dat)               /*对结果执行相关操作,客户修改*/
 237   2                                {
 238   3                                        case CODE_DMCS:                       /*命令“高速”*/
 239   3                                              SYN_FrameInfo(0,"高速命令识别成功");
 240   3                                          Delay200ms();
C51 COMPILER V9.00   MAIN                                                                  10/01/2018 10:19:00 PAGE 5   

 241   3                                              Fanflag=2;TR0=1;m1=100;
 242   3                                              
 243   3                                                                                                         break;
 244   3                                              
 245   3                                              case CODE_KFBYZ:         /*命令“”*/
 246   3                                              
 247   3                                                                                                               break;
 248   3                                              case CODE_KD:           /*命令“低速”*/        
 249   3                                              SYN_FrameInfo(0,"低速命令识别成功");
 250   3                                              Delay200ms();
 251   3                                              Fanflag=3;TR0=1;m1=50;
 252   3                                              
 253   3                                              
 254   3                                                                                                              break;
 255   3                                              case CODE_GD:           /*命令“关闭”*/
 256   3                                              SYN_FrameInfo(0,"关闭命令识别成功");
 257   3                                              Delay200ms();
 258   3                                              Fanflag=4;TR0=0;en1=0;
 259   3                                              
 260   3                                                                                                              break;
 261   3                                              case CODE_BJ:                   
 262   3                                              
 263   3                                                                                                              break;
 264   3                                              case CODE_SH:           
 265   3                                              
 266   3                                                                                                              break;
 267   3                                              case CODE_GZ:                                                   
 268   3                                              
 269   3                                                                                                              break;                                                                                                                                                                                                                  
 270   3                                              default:
 271   3                                              Fanflag=5;
 272   3                                              SYN_FrameInfo(0,"系统忙碌中");
 273   3                                              Delay200ms();
 274   3                                              
 275   3                                                      
 276   3                                                                                                              break;
 277   3                                      }       
 278   2                              }       
 279   1                              else    
 280   1                              {
 281   2                                      //PrintCom("请说出一级口令\r\n"); //串口输出提示信息（可删除）  
 282   2                              }  
 283   1      }       
 284           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =    143    ----
   XDATA SIZE       =      4       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
